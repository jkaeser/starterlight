{# Inheritance Examples
  # Add classes, change element markup, etc.
  {% include "paragraph.html.twig" with {
    'paragraph_wrapper': {
      'element': 'section',
      'classes': ['new-class'],
      'attributes': {
        'aria-role': 'button',
      }
    }
  } %}

  # Override blocks
  {% extends "paragraph.html.twig" %}
  {% block content %}
    <div class="left">
        {{ content.field_image }}
    </div>
    <div class="right">
        {{ content|without('field_image') }}
    </div>
  {% endblock %}

  # Completely override template
  {% extends "paragraph.html.twig" %}
  {% block override %}
    <div{{ attributes}}>Bar</div>
  {% endblock %}
#}

{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}


{# Set defaults and stage additions and overrides #}
{% set config = {
  'element': paragraph_wrapper.element ?: 'div',
  'classes': (paragraph_wrapper.classes ?: [])|merge([
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
  ]),
  'attributes': paragraph_wrapper.attributes ?: {},
} %}

{# Configure attributes and apply classes #}
{% for key, value in config.attributes %}
  {% set attributes = attributes.setAttribute(key, value) %}
{% endfor %}
{% set attributes = attributes.addClass(config.classes) %}

{# Render markup #}
{% block override %}
<{{ config.element }}{{ attributes }}>
  {% block content %}
    {{ content }}
  {% endblock %}
</{{ config.element }}>
{% endblock %}
